- name: Deploy Module
  hosts: all
  remote_user: "{{ username }}"

  tasks:
    - name: Build local pacakge
      delegate_to: localhost
      file:
        path: "./dist"
        state: absent

    - name: Build local pacakge
      delegate_to: localhost
      shell: |
        python3 -m venv ansible_venv
        source ansible_venv/bin/activate
        pip install build
        python -m build
        rm -rf ansible_venv

    - name: Find build whl file
      delegate_to: localhost
      find:
        paths: "./dist"
        patterns: "*.whl"
      register: dist_files

    - name: Ensure exactly one wheel file was found
      delegate_to: localhost
      fail:
        msg: "Expected exactly one .whl file, found {{ dist_files.files | length }}"
      when: dist_files.files | length != 1

    - name: Make sure module and software doesn't already exist
      file:
        path: "{{ item }}"
        state: absent
      loop:
        - "{{ software_dir}}"
        - "{{ module_file_path }}"

    - name: Make required dirs
      file:
        path: "{{ item }}"
        state: directory
        mode: "0755"
      loop:
        - "{{ module_dir }}"
        - "{{ software_dir }}"
        - "{{ software_dir }}/bin"
        - "{{ build_dir }}"

    - name: Copy wheel file to remote host
      copy:
        src: "{{ dist_files.files[0].path }}"
        dest: "{{ build_dir }}/{{ dist_files.files[0].path | basename }}"
      register: wheel_copy

    - name: Create virtual env
      shell: |
        rm -rf {{ build_dir }}/venv
        module load python/3.11
        python -m venv {{ build_dir }}/venv

    - name: Install package to venv
      shell: |
        source {{ build_dir }}/venv/bin/activate
        pip install --force-reinstall {{ wheel_copy.dest }}

    - name: Copy files to software directory
      shell: |
        cp -r {{ build_dir }}/venv/lib/python3.11/site-packages {{ software_dir }}/site_packages
        cp {{ build_dir }}/venv/bin/{{ software_name }} {{ software_dir }}/bin/{{ software_name }}

    - name: Create module file
      template:
        src: modulefile.lua.jinja2
        dest: "{{ module_file_path }}"
        mode: "0644"
